{{- if .Values.master.enabled }}
{{- $masterConfig := .Values.master.configuration }}
{{- /* $serviceAccountName for deleting statefulset pods after migration */}}
{{- $serviceAccountName := (.Values.master.serviceAccountName | default .Values.global.serviceAccountName ) }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ template "seaweedfs.name" . }}-master
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/name: {{ template "seaweedfs.name" . }}
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
spec:
  serviceName: {{ template "seaweedfs.name" . }}-master
  podManagementPolicy: {{ .Values.master.podManagementPolicy }}
  replicas: {{ .Values.master.replicas }}
  {{- if (gt (int .Values.master.updatePartition) 0) }}
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      partition: {{ .Values.master.updatePartition }}
  {{- end }}
  selector:
    matchLabels:
      app.kubernetes.io/component: master
      app.kubernetes.io/instance: {{ .Release.Name }}
      app.kubernetes.io/name: {{ template "seaweedfs.name" . }}
      helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
  template:
    metadata:
      {{- if or .Values.global.podAnnotations .Values.master.podAnnotations }}
      {{- $annotations := merge .Values.global.podAnnotations .Values.master.podAnnotations }}
      annotations:
      {{- include "common.tplvalues.render" (dict "value" $annotations "context" $) | nindent 8 }}
      {{- end }}
      labels:
        app.kubernetes.io/component: master
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/name: {{ template "seaweedfs.name" . }}
        helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
      {{ if .Values.global.podLabels }}
      {{- include "common.tplvalues.render" (dict "value" .Values.global.podLabels "context" $) | nindent 8 }}
      {{- end }}
    spec:
      restartPolicy: {{ default .Values.global.restartPolicy .Values.master.restartPolicy }}
      {{- if .Values.master.affinity }}
      affinity:
        {{ tpl .Values.master.affinity . | nindent 8 | trim }}
      {{- end }}
      {{- if .Values.master.tolerations }}
      tolerations:
        {{ tpl .Values.master.tolerations . | nindent 8 | trim }}
      {{- end }}
      {{- include "seaweedfs.imagePullSecrets" . | nindent 6 }}
      terminationGracePeriodSeconds: 60
      {{- if .Values.master.priorityClassName }}
      priorityClassName: {{ .Values.master.priorityClassName | quote }}
      {{- end }}
      enableServiceLinks: false
      {{- if and .Values.global.createClusterRole $serviceAccountName }}
      serviceAccountName: {{ $serviceAccountName | quote }} # for deleting statefulset pods after migration
      {{- end }}
      {{- if .Values.master.initContainers }}
      initContainers:
        {{ tpl .Values.master.initContainers . | nindent 8 | trim }}
      {{- end }}
      containers:
        - name: seaweedfs
          image: {{ template "master.image" . }}
          imagePullPolicy: {{ default "IfNotPresent" .Values.global.imagePullPolicy }}
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: SEAWEEDFS_FULLNAME
              value: "{{ template "seaweedfs.name" . }}"
            {{- if .Values.master.extraEnvironmentVars }}
            {{- range $key, $value := .Values.master.extraEnvironmentVars }}
            - name: {{ $key }}
            {{- if kindIs "string" $value }}
              value: {{ $value | quote }}
            {{- else }}
              valueFrom:
                {{ toYaml $value | nindent 16 | trim }}
            {{- end -}}
            {{- end }}
            {{- end }}
            {{- if .Values.global.extraEnvironmentVars }}
            {{- range $key, $value := .Values.global.extraEnvironmentVars }}
            - name: {{ $key }}
            {{- if kindIs "string" $value }}
              value: {{ $value | quote }}
            {{- else }}
              valueFrom:
                {{ toYaml $value | nindent 16 | trim }}
            {{- end -}}
            {{- end }}
            {{- end }}
          command:
            - "/bin/sh"
            - "-ec"
            - | 
              exec /usr/bin/weed \
              -logdir={{- if .Values.master.persistence.logs.enabled }}{{ .Values.master.persistence.logs.mountPath }}{{- else }}/logs{{- end }} \
              -v={{ .Values.global.loggingLevel }} \
              master \
              -defaultReplication={{- include "common.command.defaultReplicationValue" . }} \
              -garbageThreshold={{ $masterConfig.limits.garbageCollectionThreshold }} \
              -heartbeatInterval={{ $masterConfig.heartbeatIntervalSeconds }}s \
              -ip=${POD_NAME}.${SEAWEEDFS_FULLNAME}-master.{{ .Release.Namespace }} \
              -ip.bind={{ .Values.master.ipBind }} \
              -mdir={{- if .Values.master.persistence.data.enabled }}{{ .Values.master.persistence.data.mountPath }}{{- else }}/data{{- end }} \
              -volumeSizeLimitMB={{ $masterConfig.limits.targetableVolumeMaximumSize }} \
              {{- if $masterConfig.ports.http }}
              -port={{ $masterConfig.ports.http }} \
              {{- else }}
              -port=9333 \
              -disableHttp \
              {{- end }}
              {{- if $masterConfig.preallocateDiskSpaceForVolumes }}
              -volumePreallocate \
              {{- end }}
              {{- if .Values.global.monitoring.enabled }}
              {{- if and .Values.global.monitoring.gatewayHost .Values.global.monitoring.gatewayPort }}
              -metrics.address="{{ .Values.global.monitoring.gatewayHost }}:{{ .Values.global.monitoring.gatewayPort }}" \
              {{- if $masterConfig.metrics.intervalSeconds }}
              -metrics.intervalSeconds={{ $masterConfig.metrics.intervalSeconds }} \
              {{- end }}
              {{- else if $masterConfig.ports.metrics }}
              -metricsPort={{ $masterConfig.ports.metrics }} \
              {{- end }}
              {{- end }}
              -peers={{ range $index := until (.Values.master.replicas | int) }}${SEAWEEDFS_FULLNAME}-master-{{ $index }}.${SEAWEEDFS_FULLNAME}-master.{{ $.Release.Namespace }}:{{ ternary $.Values.master.configuration.ports.http 9333 (not (empty $.Values.master.configuration.ports.http)) }}{{ if lt $index (sub ($.Values.master.replicas | int) 1) }},{{ end }}{{ end }}
          volumeMounts:
            - name: seaweedfs-master-data-volume
              mountPath: {{ if and .Values.master.persistence.data.enabled .Values.master.persistence.data.mountPath }}{{ .Values.master.persistence.data.mountPath }}{{ else }}/data{{ end }}
            - name: seaweedfs-master-log-volume
              mountPath: {{ if and .Values.master.persistence.logs.enabled .Values.master.persistence.logs.mountPath }}{{ .Values.master.persistence.logs.mountPath }}{{ else }}/logs/{{ end }}
            - name: master-config
              readOnly: true
              mountPath: /etc/seaweedfs/master.toml
              subPath: master.toml
            {{- if .Values.global.tls.enabled }}
            - name: security-config
              readOnly: true
              mountPath: /etc/seaweedfs/security.toml
              subPath: security.toml
            - name: ca-cert
              readOnly: true
              mountPath: /usr/local/share/ca-certificates/ca/
            - name: master-cert
              readOnly: true
              mountPath: /usr/local/share/ca-certificates/master/
            - name: volume-cert
              readOnly: true
              mountPath: /usr/local/share/ca-certificates/volume/
            - name: filer-cert
              readOnly: true
              mountPath: /usr/local/share/ca-certificates/filer/
            - name: client-cert
              readOnly: true
              mountPath: /usr/local/share/ca-certificates/client/
            {{- end }}
            {{ tpl .Values.master.extraVolumeMounts . | nindent 12 | trim }}
          ports:
            - containerPort: {{ $masterConfig.ports.grpc }}
            - containerPort: {{ $masterConfig.ports.http }}
              name: swfs-master
            {{- if and .Values.global.monitoring.enabled $masterConfig.ports.metrics }}
            - containerPort: {{ $masterConfig.ports.metrics }}
              name: metrics
            {{- end }}
          {{- if and .Values.master.readinessProbe.enabled $masterConfig.ports.http }}
          readinessProbe:
            httpGet:
              path: {{ .Values.master.readinessProbe.httpGet.path }}
              port: {{ $masterConfig.ports.http }}
              scheme: {{ .Values.master.readinessProbe.httpGet.scheme }}
            initialDelaySeconds: {{ .Values.master.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.master.readinessProbe.periodSeconds }}
            successThreshold: {{ .Values.master.readinessProbe.successThreshold }}
            failureThreshold: {{ .Values.master.readinessProbe.failureThreshold }}
            timeoutSeconds: {{ .Values.master.readinessProbe.timeoutSeconds }}
          {{- end }}
          {{- if and .Values.master.livenessProbe.enabled $masterConfig.ports.http }}
          livenessProbe:
            httpGet:
              path: {{ .Values.master.livenessProbe.httpGet.path }}
              port: {{ $masterConfig.ports.http }}
              scheme: {{ .Values.master.livenessProbe.httpGet.scheme }}
            initialDelaySeconds: {{ .Values.master.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.master.livenessProbe.periodSeconds }}
            successThreshold: {{ .Values.master.livenessProbe.successThreshold }}
            failureThreshold: {{ .Values.master.livenessProbe.failureThreshold }}
            timeoutSeconds: {{ .Values.master.livenessProbe.timeoutSeconds }}
          {{- end }}
          {{- if .Values.master.resources }}
          resources:
            {{ tpl .Values.master.resources . | nindent 12 | trim }}
          {{- end }}
        {{- if .Values.master.sidecars }}
        {{- include "common.tplvalues.render" (dict "value" .Values.master.sidecars "context" $) | nindent 8 }}
        {{- end }}
      volumes:
        {{- if not .Values.master.persistence.data.enabled }}
        - name: seaweedfs-master-data-volume
          emptyDir: {}
        {{- else if .Values.master.persistence.data.existingClaim }}
        - name: seaweedfs-master-data-volume
          persistentVolumeClaim:
            claimName: {{ printf "%s" (tpl .Values.master.persistence.data.existingClaim .) }}
        {{- else if .Values.master.persistence.data.hostPathPrefix }}
        - name: seaweedfs-master-data-volume
          hostPath:
            path: {{ .Values.master.persistence.data.hostPathPrefix }}/seaweed-master/
            type: DirectoryOrCreate
        {{- end }}
        {{- if not .Values.master.persistence.logs.enabled }}
        - name: seaweedfs-master-log-volume
          emptyDir: {}
        {{- else if .Values.master.persistence.logs.existingClaim }}
        - name: seaweedfs-master-log-volume
          persistentVolumeClaim:
            claimName: {{ printf "%s" (tpl .Values.master.persistence.logs.existingClaim .) }}
        {{- else if .Values.master.persistence.logs.hostPathPrefix }}
        - name: seaweedfs-master-log-volume
          hostPath:
            path: {{ .Values.master.persistence.logs.hostPathPrefix }}/logs/seaweedfs/master
            type: DirectoryOrCreate
        {{- end }}
        - name: master-config
          configMap:
            name: {{ template "seaweedfs.name" . }}-master-config
        {{- if .Values.global.tls.enabled }}
        - name: security-config
          configMap:
            name: {{ template "seaweedfs.name" . }}-security-config
        - name: ca-cert
          secret:
            secretName: {{ template "seaweedfs.name" . }}-ca-cert
        - name: master-cert
          secret:
            secretName: {{ template "seaweedfs.name" . }}-master-cert
        - name: volume-cert
          secret:
            secretName: {{ template "seaweedfs.name" . }}-volume-cert
        - name: filer-cert
          secret:
            secretName: {{ template "seaweedfs.name" . }}-filer-cert
        - name: client-cert
          secret:
            secretName: {{ template "seaweedfs.name" . }}-client-cert
        {{- end }}
        {{ tpl .Values.master.extraVolumes . | indent 8 | trim }}
      {{- if .Values.master.nodeSelector }}
      nodeSelector:
        {{ tpl .Values.master.nodeSelector . | indent 8 | trim }}
      {{- end }}
  {{- if or (and .Values.master.persistence.data.enabled (not .Values.master.persistence.data.existingClaim)) (and .Values.master.persistence.logs.enabled (not .Values.master.persistence.logs.existingClaim)) }}
  volumeClaimTemplates:
    {{- if and .Values.master.persistence.data.enabled (not .Values.master.persistence.data.existingClaim) }}
    - metadata:
        name: seaweedfs-master-data-volume
        {{- if .Values.master.persistence.data.annotations }}
        annotations: {{- include "common.tplvalues.render" (dict "value" .Values.master.persistence.data.annotations "context" $) | nindent 10 }}
        {{- end }}
        {{- if .Values.master.persistence.data.labels }}
        labels: {{- include "common.tplvalues.render" (dict "value" .Values.master.persistence.data.labels "context" $) | nindent 10 }}
        {{- end }}
      spec:
        accessModes:
        {{- range .Values.master.persistence.data.accessModes }}
          - {{ . | quote }}
        {{- end }}
        resources:
          requests:
            storage: {{ .Values.master.persistence.data.size | quote }}
        {{- include "common.storage.class" (dict "persistence" .Values.master.persistence.data "global" .Values.global) | nindent 8 }}
        {{- if .Values.master.persistence.data.selector }}
        selector: {{- include "common.tplvalues.render" (dict "value" .Values.master.persistence.data.selector "context" $) | nindent 10 }}
        {{- end -}}
    {{- end }}
    {{- if and .Values.master.persistence.logs.enabled (not .Values.master.persistence.logs.existingClaim) }}
    - metadata:
        name: seaweedfs-master-log-volume
        {{- if .Values.master.persistence.logs.annotations }}
        annotations: {{- include "common.tplvalues.render" (dict "value" .Values.master.persistence.logs.annotations "context" $) | nindent 10 }}
        {{- end }}
        {{- if .Values.master.persistence.logs.labels }}
        labels: {{- include "common.tplvalues.render" (dict "value" .Values.master.persistence.logs.labels "context" $) | nindent 10 }}
        {{- end }}
      spec:
        accessModes:
        {{- range .Values.master.persistence.logs.accessModes }}
          - {{ . | quote }}
        {{- end }}
        resources:
          requests:
            storage: {{ .Values.master.persistence.logs.size | quote }}
        {{- include "common.storage.class" (dict "persistence" .Values.master.persistence.logs "global" .Values.global) | nindent 8 }}
        {{- if .Values.master.persistence.logs.selector }}
        selector: {{- include "common.tplvalues.render" (dict "value" .Values.master.persistence.logs.selector "context" $) | nindent 10 }}
        {{- end -}}
    {{- end }}
  {{- end }}
{{- end }}
