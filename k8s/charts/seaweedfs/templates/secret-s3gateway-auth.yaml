{{- if and (or .Values.filer.s3Gateway.enabled .Values.s3.enabled) .Values.global.s3Gateway.auth.enabled }}
{{- $identities := .Values.global.s3Gateway.auth.identities }}
{{- $administratorIdentity := "" }}
{{- if $identities.administrator.enabled }}
{{- $administratorIdentity = (dict "actions" (list "Admin" "List" "Read" "Tagging" "Write") "credentials" ($identities.administrator.credentials | compact) "name" "administrator") }}
{{- end }}
{{- $anonymousIdentity := "" }}
{{- if $identities.anonymous.enabled }}
{{- $anonymousIdentity = (dict "actions" (list "Read") "name" "anonymous") }}
{{- end }}
{{- $guestIdentity := "" }}
{{- if $identities.guest.enabled }}
{{- $guestIdentity = (dict "actions" (list "List" "Read") "credentials" ($identities.guest.credentials | compact) "name" "guest") }}
{{- end }}
{{- $memberIdentity := "" }}
{{- if $identities.member.enabled }}
{{- $memberIdentity = (dict "actions" (list "List" "Read" "Tagging" "Write") "credentials" ($identities.member.credentials | compact) "name" "member") }}
{{- end }}
apiVersion: v1
kind: Secret
type: Opaque
metadata:
  annotations:
    "helm.sh/resource-policy": keep
    "helm.sh/hook": "pre-install"
  labels:
    app.kubernetes.io/component: s3-gateway
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/name: {{ template "seaweedfs.name" . }}
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
  name: {{ template "seaweedfs.name" . }}-s3-gateway-auth
  namespace: {{ .Release.Namespace }}
stringData:
  {{- if and $identities.administrator.enabled $identities.administrator.credentials }}
  administratorCredentials: {{ quote (mustToJson $identities.administrator.credentials) }}
  {{- end }}
  {{- if and $identities.guest.enabled $identities.guest.credentials }}
  guestCredentials: {{ quote (mustToJson $identities.guest.credentials) }}
  {{- end }}
  {{- if and $identities.member.enabled $identities.member.credentials }}
  memberCredentials: {{ quote (mustToJson $identities.member.credentials) }}
  {{- end }}
  config.json: {{ quote (mustToJson (dict "identities" (compact (list $administratorIdentity $anonymousIdentity $guestIdentity $memberIdentity)))) }}
{{- end }}
