{{- if .Values.volume.enabled }}
{{- $dataPersistenceEnabled := (and .Values.volume.persistence.data.enabled .Values.volume.persistence.data.volumes ) }}
{{- $dataPersistenceVolumeNameToVolumeMap := dict }}
{{- $dataPersistenceVolumeNameToVolumeTemplateMap := dict }}
{{- $dataPersistenceVolumeNames := list }}
{{- range $i, $volume := .Values.volume.persistence.data.volumes }}
{{- $volumeName := $volume.name | default ( printf "seaweedfs-volume-data-volume-%d" $i ) }}
{{- $dataPersistenceVolumeNames = append $dataPersistenceVolumeNames $volumeName }}
{{- if or $volume.existingClaim $volume.hostPathPrefix }}
{{- $dataPersistenceVolumeNameToVolumeMap = set $dataPersistenceVolumeNameToVolumeMap $volumeName $volume }}
{{- else }}
{{- $dataPersistenceVolumeNameToVolumeTemplateMap = set $dataPersistenceVolumeNameToVolumeTemplateMap $volumeName $volume }}
{{- end }}
{{- end }}
{{- /* $serviceAccountName for deleting statefulset pods after migration */ -}}
{{- $serviceAccountName := (.Values.volume.serviceAccountName | default .Values.global.serviceAccountName) }}
{{- $volumeConfig := .Values.volume.configuration }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ template "seaweedfs.name" . }}-volume
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/name: {{ template "seaweedfs.name" . }}
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
spec:
  serviceName: {{ template "seaweedfs.name" . }}-volume
  replicas: {{ .Values.volume.replicas }}
  podManagementPolicy: {{ .Values.volume.podManagementPolicy }}
  selector:
    matchLabels:
      app.kubernetes.io/component: volume
      app.kubernetes.io/instance: {{ .Release.Name }}
      app.kubernetes.io/name: {{ template "seaweedfs.name" . }}
      helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
  template:
    metadata:
      {{- if or .Values.global.podAnnotations .Values.volume.podAnnotations }}
      {{- $annotations := merge .Values.global.podAnnotations .Values.volume.podAnnotations }}
      annotations:
      {{- include "common.tplvalues.render" (dict "value" $annotations "context" $) | nindent 8 }}
      {{- end }}
      labels:
        app.kubernetes.io/component: volume
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/name: {{ template "seaweedfs.name" . }}
        helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
      {{ if .Values.global.podLabels }}
      {{- include "common.tplvalues.render" (dict "value" .Values.global.podLabels "context" $) | nindent 8 }}
      {{- end }}
    spec:
      {{- if .Values.volume.affinity }}
      affinity:
        {{ tpl .Values.volume.affinity . | nindent 8 | trim }}
      {{- end }}
      restartPolicy: {{ default .Values.global.restartPolicy .Values.volume.restartPolicy }}
      {{- if .Values.volume.tolerations }}
      tolerations:
        {{ tpl .Values.volume.tolerations . | nindent 8 | trim }}
      {{- end }}
      {{- include "seaweedfs.imagePullSecrets" . | nindent 6 }}
      terminationGracePeriodSeconds: 150
      {{- if .Values.volume.priorityClassName }}
      priorityClassName: {{ .Values.volume.priorityClassName | quote }}
      {{- end }}
      enableServiceLinks: false
      {{- if and .Values.global.createClusterRole $serviceAccountName }}
      serviceAccountName: {{ $serviceAccountName | quote }}
      {{- end }}
      {{- $initContainers_exists := include "volume.initContainers_exists" . -}}
      {{- if $initContainers_exists }}
      initContainers:
        {{- if .Values.volume.persistence.indices.enabled }}
        - name: seaweedfs-vol-move-idx
          image: {{ template "volume.image" . }}
          imagePullPolicy: {{ .Values.global.imagePullPolicy | default "IfNotPresent" }}
          command: [ '/bin/sh', '-c' ]
          args: [ '{{range $volumeName := $dataPersistenceVolumeNames }}if ls /{{$volumeName}}/*.idx  >/dev/null 2>&1; then mv /{{$volumeName}}/*.idx /idx/ ; fi; {{end}}' ]
          volumeMounts:
            - name: seaweedfs-volume-indices-volume
              mountPath: /idx
          {{- range $volumeName := $dataPersistenceVolumeNames }}
            - name: {{ $volumeName | quote }}
              mountPath: /{{ $volumeName }}
          {{- end }}
        {{- end }}
        {{- if .Values.volume.initContainers }}
        {{ tpl .Values.volume.initContainers . | nindent 8 | trim }}
        {{- end }}
      {{- end }}
      containers:
        - name: seaweedfs
          image: {{ template "volume.image" . }}
          imagePullPolicy: {{ default "IfNotPresent" .Values.global.imagePullPolicy }}
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: HOST_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: SEAWEEDFS_FULLNAME
              value: "{{ template "seaweedfs.name" . }}"
            {{- if .Values.volume.extraEnvironmentVars }}
            {{- range $key, $value := .Values.volume.extraEnvironmentVars }}
            - name: {{ $key }}
            {{- if kindIs "string" $value }}
              value: {{ $value | quote }}
            {{- else }}
              valueFrom:
                {{ toYaml $value | nindent 16 | trim }}
            {{- end -}}
            {{- end }}
            {{- end }}
            {{- if .Values.global.extraEnvironmentVars }}
            {{- range $key, $value := .Values.global.extraEnvironmentVars }}
            - name: {{ $key }}
            {{- if kindIs "string" $value }}
              value: {{ $value | quote }}
            {{- else }}
              valueFrom:
                {{ toYaml $value | nindent 16 | trim }}
            {{- end -}}
            {{- end }}
            {{- end }}
          command:
            - "/bin/sh"
            - "-ec"
            - |
              exec /usr/bin/weed \
                -logdir={{- if .Values.volume.persistence.logs.enabled }}{{ .Values.volume.persistence.logs.mountPath }}{{- else }}/logs{{- end }} \
                {{- if .Values.volume.loggingOverrideLevel }}
                -v={{ .Values.volume.loggingOverrideLevel }} \
                {{- else }}
                -v={{ .Values.global.loggingLevel }} \
                {{- end }}
                volume \
                -compactionMBps={{ $volumeConfig.limits.backgroundCompactionRate }} \
                -dataCenter={{ $volumeConfig.topology.dataCenterName }} \
                -dir {{range $i, $volumeName := $dataPersistenceVolumeNames }}{{if ne $i 0}},{{end}}/{{$volumeName}}{{end}} \
                -dir.idx={{- if .Values.volume.persistence.indices.enabled }}{{ .Values.volume.persistence.indices.mountPath }}{{- else }}/indices{{- end }} \
                -fileSizeLimitMB={{ $volumeConfig.limits.fileSize }} \
                -index={{ $volumeConfig.indexingImplementation }} \
                -ip=${POD_NAME}.${SEAWEEDFS_FULLNAME}-volume.{{ .Release.Namespace }} \
                -ip.bind={{ .Values.volume.ipBind }} \
                -max {{range $, $volume :=  .Values.volume.persistence.data.volumes }}{{if ne $ 0}},{{end}}{{$volume.configuration.limits.maximumVolumeCount}}{{end}} \
                -minFreeSpacePercent={{ subf 100.0 $volumeConfig.limits.diskSpaceUtilization }} \
                -port={{ $volumeConfig.ports.http }} \
                -rack={{ $volumeConfig.topology.rackName }} \
                -readMode={{ $volumeConfig.nonLocalVolumeReadRequestPolicy }} \
                {{- if $volumeConfig.idleTimeoutSeconds }}
                -idleTimeout={{ $volumeConfig.idleTimeoutSeconds }} \
                {{- end }}
                {{- if and .Values.global.monitoring.enabled $volumeConfig.ports.metrics }}
                -metricsPort={{ $volumeConfig.ports.metrics }} \
                {{- end }}
                {{- if $volumeConfig.writePermissionsIPWhitelist }}
                -whiteList={{ join "," $volumeConfig.writePermissionsIPWhitelist }} \
                {{- end }}
                {{- if $volumeConfig.autoAdjustImageOrientation }}
                -images.fix.orientation \
                {{- end }}
                -mserver={{ range $index := until (.Values.master.replicas | int) }}${SEAWEEDFS_FULLNAME}-master-{{ $index }}.${SEAWEEDFS_FULLNAME}-master.{{ $.Release.Namespace }}:{{ ternary $.Values.master.configuration.ports.http 9333 (not (empty $.Values.master.configuration.ports.http)) }}{{ if lt $index (sub ($.Values.master.replicas | int) 1) }},{{ end }}{{ end }}
          volumeMounts:
            {{- if not $dataPersistenceEnabled }}
            - name: seaweedfs-volume-data-volume
              mountPath: "/data/"
            {{- else }}
            {{- range $volumeName := $dataPersistenceVolumeNames }}
            - name: {{ $volumeName | quote }}
              mountPath: "/{{ $volumeName }}/"
            {{- end }}
            {{- end }}
            - name: seaweedfs-volume-indices-volume
              mountPath: {{ if and .Values.volume.persistence.indices.enabled .Values.volume.persistence.indices.mountPath }}{{ .Values.volume.persistence.indices.mountPath }}{{ else }}/indices{{ end }}
            - name: seaweedfs-volume-log-volume
              mountPath: {{ if and .Values.volume.persistence.logs.enabled .Values.volume.persistence.logs.mountPath }}{{ .Values.volume.persistence.logs.mountPath }}{{ else }}/logs{{ end }}
            {{- if .Values.global.tls.enabled }}
            - name: security-config
              readOnly: true
              mountPath: /etc/seaweedfs/security.toml
              subPath: security.toml
            - name: ca-cert
              readOnly: true
              mountPath: /usr/local/share/ca-certificates/ca/
            - name: master-cert
              readOnly: true
              mountPath: /usr/local/share/ca-certificates/master/
            - name: volume-cert
              readOnly: true
              mountPath: /usr/local/share/ca-certificates/volume/
            - name: filer-cert
              readOnly: true
              mountPath: /usr/local/share/ca-certificates/filer/
            - name: client-cert
              readOnly: true
              mountPath: /usr/local/share/ca-certificates/client/
            {{- end }}
            {{ tpl .Values.volume.extraVolumeMounts . | nindent 12 | trim }}
          ports:
            - containerPort: {{ $volumeConfig.ports.grpc }}
            - containerPort: {{ $volumeConfig.ports.http }}
              name: swfs-vol
            {{- if and .Values.global.monitoring.enabled $volumeConfig.ports.metrics }}
            - containerPort: {{ $volumeConfig.ports.metrics }}
              name: metrics
            {{- end }}
          {{- if .Values.volume.readinessProbe.enabled }}
          readinessProbe:
            httpGet:
              path: {{ .Values.volume.readinessProbe.httpGet.path }}
              port: {{ $volumeConfig.ports.http }}
              scheme: {{ .Values.volume.readinessProbe.httpGet.scheme }}
            initialDelaySeconds: {{ .Values.volume.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.volume.readinessProbe.periodSeconds }}
            successThreshold: {{ .Values.volume.readinessProbe.successThreshold }}
            failureThreshold: {{ .Values.volume.readinessProbe.failureThreshold }}
            timeoutSeconds: {{ .Values.volume.readinessProbe.timeoutSeconds }}
          {{- end }}
          {{- if .Values.volume.livenessProbe.enabled }}
          livenessProbe:
            httpGet:
              path: {{ .Values.volume.livenessProbe.httpGet.path }}
              port: {{ $volumeConfig.ports.http }}
              scheme: {{ .Values.volume.livenessProbe.httpGet.scheme }}
            initialDelaySeconds: {{ .Values.volume.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.volume.livenessProbe.periodSeconds }}
            successThreshold: {{ .Values.volume.livenessProbe.successThreshold }}
            failureThreshold: {{ .Values.volume.livenessProbe.failureThreshold }}
            timeoutSeconds: {{ .Values.volume.livenessProbe.timeoutSeconds }}
          {{- end }}
          {{- if .Values.volume.resources }}
          resources:
            {{ tpl .Values.volume.resources . | nindent 12 | trim }}
          {{- end }}
      volumes:
        {{- if not $dataPersistenceEnabled }}
        - name: seaweedfs-volume-data-volume
          emptyDir: {}
        {{- else }}
        {{- range $volumeName, $volume := $dataPersistenceVolumeNameToVolumeMap }}
        - name: {{ $volumeName | quote }}
        {{- if $volume.existingClaim }}
          persistentVolumeClaim:
            claimName: {{ printf "%s" (tpl $volume.existingClaim .) }}
        {{- else }}
          hostPath:
            path: {{ $volume.hostPathPrefix }}/object_store/
            type: DirectoryOrCreate
        {{- end }}
        {{- end }}
        {{- end }}
        {{- if not .Values.volume.persistence.indices.enabled }}
        - name: seaweedfs-volume-indices-volume
          emptyDir: {}
        {{- else if .Values.volume.persistence.indices.existingClaim }}
        - name: seaweedfs-volume-indices-volume
          persistentVolumeClaim:
            claimName: {{ printf "%s" (tpl .Values.volume.persistence.indices.existingClaim .) }}
        {{- else if .Values.volume.persistence.indices.hostPathPrefix }}
        - name: seaweedfs-volume-indices-volume
          hostPath:
            path: {{ .Values.volume.persistence.indices.hostPathPrefix }}/seaweedfs-volume-idx/
            type: DirectoryOrCreate
        {{- end }}
        {{- if not .Values.volume.persistence.logs.enabled }}
        - name: seaweedfs-volume-log-volume
          emptyDir: {}
        {{- else if .Values.volume.persistence.logs.existingClaim }}
        - name: seaweedfs-volume-log-volume
          persistentVolumeClaim:
            claimName: {{ printf "%s" (tpl .Values.volume.persistence.logs.existingClaim .) }}
        {{- else if .Values.volume.persistence.logs.hostPathPrefix }}
        - name: seaweedfs-volume-log-volume
          hostPath:
            path: {{ .Values.volume.persistence.logs.hostPathPrefix }}/logs/seaweedfs/volume
            type: DirectoryOrCreate
        {{- end }}
        {{- if .Values.global.tls.enabled }}
        - name: security-config
          configMap:
            name: {{ template "seaweedfs.name" . }}-security-config
        - name: ca-cert
          secret:
            secretName: {{ template "seaweedfs.name" . }}-ca-cert
        - name: master-cert
          secret:
            secretName: {{ template "seaweedfs.name" . }}-master-cert
        - name: volume-cert
          secret:
            secretName: {{ template "seaweedfs.name" . }}-volume-cert
        - name: filer-cert
          secret:
            secretName: {{ template "seaweedfs.name" . }}-filer-cert
        - name: client-cert
          secret:
            secretName: {{ template "seaweedfs.name" . }}-client-cert
      {{- end }}
      {{- if .Values.volume.extraVolumes }}
        {{ tpl .Values.volume.extraVolumes . | indent 8 | trim }}
      {{- end }}
      {{- if .Values.volume.nodeSelector }}
      nodeSelector:
        {{ tpl .Values.volume.nodeSelector . | indent 8 | trim }}
      {{- end }}
  {{- if or (and .Values.volume.persistence.data.enabled $dataPersistenceVolumeNameToVolumeTemplateMap) (and .Values.volume.persistence.indices.enabled (not .Values.volume.persistence.indices.existingClaim)) (and .Values.volume.persistence.logs.enabled (not .Values.volume.persistence.logs.existingClaim)) }}
  volumeClaimTemplates:
    {{- range $volumeName, $volume := $dataPersistenceVolumeNameToVolumeTemplateMap }}
    - metadata:
        name: {{ $volumeName | quote }}
        {{- if $volume.annotations }}
        annotations: {{- include "common.tplvalues.render" (dict "value" $volume.annotations "context" $) | nindent 10 }}
        {{- end }}
        {{- if $volume.labels }}
        labels: {{- include "common.tplvalues.render" (dict "value" $volume.labels "context" $) | nindent 10 }}
        {{- end }}
      spec:
        accessModes:
        {{- range $volume.accessModes }}
          - {{ . | quote }}
        {{- end }}
        resources:
          requests:
            storage: {{ $volume.size | quote }}
        {{- include "common.storage.class" (dict "persistence" $volume "global" $.Values.global) | nindent 8 }}
        {{- if $volume.selector }}
        selector: {{- include "common.tplvalues.render" (dict "value" $volume.selector "context" $) | nindent 10 }}
        {{- end -}}
    {{- end }}
    {{- if and .Values.volume.persistence.indices.enabled (not (or .Values.volume.persistence.indices.existingClaim .Values.volume.persistence.indices.hostPathPrefix)) }}
    - metadata:
        name: seaweedfs-volume-indices-volume
        {{- if .Values.volume.persistence.indices.annotations }}
        annotations: {{- include "common.tplvalues.render" (dict "value" .Values.volume.persistence.indices.annotations "context" $) | nindent 10 }}
        {{- end }}
        {{- if .Values.volume.persistence.indices.labels }}
        labels: {{- include "common.tplvalues.render" (dict "value" .Values.volume.persistence.indices.labels "context" $) | nindent 10 }}
        {{- end }}
      spec:
        accessModes:
        {{- range .Values.volume.persistence.indices.accessModes }}
          - {{ . | quote }}
        {{- end }}
        resources:
          requests:
            storage: {{ .Values.volume.persistence.indices.size | quote }}
        {{- include "common.storage.class" (dict "persistence" .Values.volume.persistence.indices "global" .Values.global) | nindent 8 }}
        {{- if .Values.volume.persistence.indices.selector }}
        selector: {{- include "common.tplvalues.render" (dict "value" .Values.volume.persistence.indices.selector "context" $) | nindent 10 }}
        {{- end -}}
    {{- end }}
    {{- if and .Values.volume.persistence.logs.enabled (not (or .Values.volume.persistence.logs.existingClaim .Values.volume.persistence.logs.hostPathPrefix)) }}
    - metadata:
        name: seaweedfs-volume-log-volume
        {{- if .Values.volume.persistence.logs.annotations }}
        annotations: {{- include "common.tplvalues.render" (dict "value" .Values.volume.persistence.logs.annotations "context" $) | nindent 10 }}
        {{- end }}
        {{- if .Values.volume.persistence.logs.labels }}
        labels: {{- include "common.tplvalues.render" (dict "value" .Values.volume.persistence.logs.labels "context" $) | nindent 10 }}
        {{- end }}
      spec:
        accessModes:
        {{- range .Values.volume.persistence.logs.accessModes }}
          - {{ . | quote }}
        {{- end }}
        resources:
          requests:
            storage: {{ .Values.volume.persistence.logs.size | quote }}
        {{- include "common.storage.class" (dict "persistence" .Values.volume.persistence.logs "global" .Values.global) | nindent 8 }}
        {{- if .Values.volume.persistence.logs.selector }}
        selector: {{- include "common.tplvalues.render" (dict "value" .Values.volume.persistence.logs.selector "context" $) | nindent 10 }}
        {{- end -}}
    {{- end }}
  {{- end }}
{{- end }}